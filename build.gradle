buildscript {
	ext {
		springBootVersion = '1.4.2.RELEASE'
        hibernateVersion = '5.1.1.Final'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'checkstyle'
apply plugin: 'pmd'

jar {
	baseName = 'shop'
	version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
	jcenter()
	maven { url "http://repo.spring.io/snapshot" }
	maven { url "http://repo.spring.io/milestone" }
}

configurations {
    jpamodelgen
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')

    compile("org.hibernate:hibernate-java8:${hibernateVersion}")
	compile('org.projectlombok:lombok')
	runtime('com.h2database:h2')
	runtime('mysql:mysql-connector-java')

    compile('org.webjars:angularjs:2.0.0-alpha.22')

    jpamodelgen("org.hibernate:hibernate-jpamodelgen:${hibernateVersion}")


    testCompile('org.springframework.boot:spring-boot-starter-test')
}


checkstyle {
    toolVersion = '7.3'
}

task wrapper(type: Wrapper) {
	gradleVersion = '3.2.1'
}

sourceSets {
    generated.java.srcDirs = ['src/main/generated']
}

task generateMetamodel(type: JavaCompile) {
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.jpamodelgen
    options.compilerArgs = [
            "-proc:only"
    ]
    destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}
compileJava.dependsOn generateMetamodel
compileJava.source sourceSets.generated.java, sourceSets.main.java